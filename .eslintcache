[{"D:\\projects\\tradeling-gh-search\\src\\App.tsx":"1","D:\\projects\\tradeling-gh-search\\src\\index.tsx":"2","D:\\projects\\tradeling-gh-search\\src\\reportWebVitals.ts":"3","D:\\projects\\tradeling-gh-search\\src\\constants\\index.ts":"4","D:\\projects\\tradeling-gh-search\\src\\components\\Header\\Header.tsx":"5","D:\\projects\\tradeling-gh-search\\src\\components\\SearchBar\\SearchBar.tsx":"6","D:\\projects\\tradeling-gh-search\\src\\components\\SelectDropDown\\SelectDropDown.tsx":"7","D:\\projects\\tradeling-gh-search\\src\\components\\Grid\\Grid.tsx":"8","D:\\projects\\tradeling-gh-search\\src\\redux\\configureStore.ts":"9","D:\\projects\\tradeling-gh-search\\src\\redux\\rootReducer.ts":"10","D:\\projects\\tradeling-gh-search\\src\\redux\\search\\searchReducer.ts":"11","D:\\projects\\tradeling-gh-search\\src\\redux\\search\\searchTypes.ts":"12","D:\\projects\\tradeling-gh-search\\src\\redux\\search\\searchActions.ts":"13","D:\\projects\\tradeling-gh-search\\src\\utils\\index.ts":"14","D:\\projects\\tradeling-gh-search\\src\\hooks\\useFetchData.ts":"15","D:\\projects\\tradeling-gh-search\\src\\components\\Grid\\UserGrid.tsx":"16","D:\\projects\\tradeling-gh-search\\src\\components\\Grid\\RepositoryGrid.tsx":"17","D:\\projects\\tradeling-gh-search\\src\\components\\Common\\CommonComponents.ts":"18","D:\\projects\\tradeling-gh-search\\src\\interfaces\\index.ts":"19"},{"size":1210,"mtime":1612701022127,"results":"20","hashOfConfig":"21"},{"size":523,"mtime":1612437197793,"results":"22","hashOfConfig":"21"},{"size":425,"mtime":1611421372866,"results":"23","hashOfConfig":"21"},{"size":370,"mtime":1612684404349,"results":"24","hashOfConfig":"21"},{"size":1119,"mtime":1612639376243,"results":"25","hashOfConfig":"21"},{"size":1575,"mtime":1612701745719,"results":"26","hashOfConfig":"21"},{"size":1324,"mtime":1612694437095,"results":"27","hashOfConfig":"21"},{"size":994,"mtime":1612693183464,"results":"28","hashOfConfig":"21"},{"size":760,"mtime":1612640273707,"results":"29","hashOfConfig":"21"},{"size":197,"mtime":1612579385324,"results":"30","hashOfConfig":"21"},{"size":2036,"mtime":1612701662361,"results":"31","hashOfConfig":"21"},{"size":651,"mtime":1612687033267,"results":"32","hashOfConfig":"21"},{"size":2422,"mtime":1612693347009,"results":"33","hashOfConfig":"21"},{"size":395,"mtime":1612680239954,"results":"34","hashOfConfig":"21"},{"size":920,"mtime":1612624033757,"results":"35","hashOfConfig":"21"},{"size":623,"mtime":1612701022135,"results":"36","hashOfConfig":"21"},{"size":704,"mtime":1612692952674,"results":"37","hashOfConfig":"21"},{"size":507,"mtime":1612701022131,"results":"38","hashOfConfig":"21"},{"size":240,"mtime":1612694348098,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"19tihrg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\tradeling-gh-search\\src\\App.tsx",[],["85","86"],"D:\\projects\\tradeling-gh-search\\src\\index.tsx",[],"D:\\projects\\tradeling-gh-search\\src\\reportWebVitals.ts",[],"D:\\projects\\tradeling-gh-search\\src\\constants\\index.ts",[],"D:\\projects\\tradeling-gh-search\\src\\components\\Header\\Header.tsx",["87","88"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { getLength } from '../../utils'\r\nimport GitHub from '../../images/github.png'\r\nimport { useSelector } from 'react-redux'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\n\r\nconst StyledHeader = styled.div`\r\n  margin-bottom: 10px;\r\n  width: max-content;\r\n`\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst ImageWrapper = styled.img`\r\n  height: 50px;\r\n  width: 50px;\r\n  float: left;\r\n`\r\n\r\nconst StyledHeadingText = styled.span`\r\n  font-weight: 700;\r\n  display: block;\r\n  text-align: start;\r\n`\r\n\r\nconst StyledDescriptionText = styled.span`\r\n  display: block;\r\n  text-align: start;\r\n  color: #666666;\r\n`\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <StyledWrapper >\r\n        <ImageWrapper src={GitHub} alt=\"GitHub\" />\r\n        <>\r\n          <StyledHeadingText>GitHub Searcher</StyledHeadingText>\r\n          <StyledDescriptionText>Search users or repositories below</StyledDescriptionText>\r\n        </>\r\n      </StyledWrapper>\r\n      <SearchBar />\r\n    </StyledHeader>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","D:\\projects\\tradeling-gh-search\\src\\components\\SearchBar\\SearchBar.tsx",[],"D:\\projects\\tradeling-gh-search\\src\\components\\SelectDropDown\\SelectDropDown.tsx",[],["89","90"],"D:\\projects\\tradeling-gh-search\\src\\components\\Grid\\Grid.tsx",["91"],"import React, { FunctionComponent } from 'react'\r\nimport styled from 'styled-components'\r\nimport { isEqual, map } from 'lodash'\r\nimport UserGrid from './UserGrid'\r\nimport RepositoryGrid from './RepositoryGrid'\r\nimport { USERS } from \"../../constants\"\r\n\r\nconst StyledGridContainer = styled.div`\r\n  display: grid;\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 275px 275px;\r\n  }\r\n  grid-template-columns: auto auto auto;\r\n  grid-gap: 20px;\r\n  ${({ data }) => data.length && `\r\n     height: 75vh;\r\n     overflow-y: auto;\r\n  `}\r\n`\r\n\r\ninterface Props {\r\n  data: Array<object>,\r\n  criteria: string,\r\n  loading: boolean,\r\n}\r\n\r\nconst Grid = ({ data, criteria, loading }: Props) => {\r\n  return (\r\n    <StyledGridContainer data={data}>\r\n      {\r\n        loading ?\r\n          <p>Loading...</p> :\r\n          map(data, i => isEqual(criteria, USERS) ? <UserGrid key={i.id} data={i} /> : <RepositoryGrid key={i.id} data={i} />)\r\n      }\r\n    </StyledGridContainer>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","D:\\projects\\tradeling-gh-search\\src\\redux\\configureStore.ts",[],"D:\\projects\\tradeling-gh-search\\src\\redux\\rootReducer.ts",[],"D:\\projects\\tradeling-gh-search\\src\\redux\\search\\searchReducer.ts",["92"],"import {\r\n  SET_CRITERIA,\r\n  SET_QUERY,\r\n  FETCH_USERS_REQUESTS,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_ERROR,\r\n  FETCH_REPOSITORIES_REQUESTS,\r\n  FETCH_REPOSITORIES_SUCCESS,\r\n  FETCH_REPOSITORIES_ERROR,\r\n  CLEAR_USERS,\r\n  CLEAR_REPOSITORIES\r\n} from './searchTypes'\r\nimport { USERS } from '../../constants'\r\nimport { isEmpty } from 'lodash';\r\n\r\nconst initState = {\r\n  criteria: USERS,\r\n  query: \"\",\r\n  users: [],\r\n  repositories: [],\r\n  loading: false,\r\n  error: \"\"\r\n}\r\n\r\ntype action = {\r\n  type: string,\r\n  payload: object | Array<Object>\r\n}\r\n\r\nconst searchReducer = (state = initState, { type, payload }: action) => {\r\n  switch (type) {\r\n    case SET_CRITERIA:\r\n      return {\r\n        ...state,\r\n        criteria: payload,\r\n      }\r\n    case SET_QUERY:\r\n      return {\r\n        ...state,\r\n        query: payload,\r\n      }\r\n    case FETCH_USERS_REQUESTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: [...state.users, ...payload],\r\n        error: ''\r\n      }\r\n    case FETCH_USERS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: [],\r\n        error: payload\r\n      }\r\n\r\n    case FETCH_REPOSITORIES_REQUESTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case FETCH_REPOSITORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repositories: [...state.repositories, ...payload],\r\n        error: ''\r\n      }\r\n    case FETCH_REPOSITORIES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repositories: [],\r\n        error: payload\r\n      }\r\n\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: [],\r\n        error: \"\"\r\n      }\r\n    case CLEAR_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repositories: [],\r\n        error: \"\"\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default searchReducer","D:\\projects\\tradeling-gh-search\\src\\redux\\search\\searchTypes.ts",[],"D:\\projects\\tradeling-gh-search\\src\\redux\\search\\searchActions.ts",[],"D:\\projects\\tradeling-gh-search\\src\\utils\\index.ts",[],"D:\\projects\\tradeling-gh-search\\src\\hooks\\useFetchData.ts",["93","94","95","96","97","98","99","100","101","102","103"],"D:\\projects\\tradeling-gh-search\\src\\components\\Grid\\UserGrid.tsx",["104"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { get } from 'lodash'\r\nimport { StyledGridItem, StyledNameField, StyledAnchor, StyledImage } from '../Common/CommonComponents'\r\n\r\ninterface Props {\r\n  data: object,\r\n}\r\n\r\nconst UserGrid = ({ data }: Props) => {\r\n  return (\r\n    <StyledGridItem>\r\n      <StyledImage src={get(data, 'avatar_url')} alt={get(data, 'login')} />\r\n      <StyledNameField>Name: {get(data, 'login')}</StyledNameField>\r\n      <StyledAnchor href={get(data, 'html_url')} target=\"_blank\">GitHub profile</StyledAnchor>\r\n    </StyledGridItem >\r\n  )\r\n}\r\n\r\nexport default UserGrid;\r\n","D:\\projects\\tradeling-gh-search\\src\\components\\Grid\\RepositoryGrid.tsx",["105"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { get } from 'lodash'\r\nimport { StyledGridItem, StyledNameField, StyledAnchor } from '../Common/CommonComponents'\r\n\r\ninterface Props {\r\n  data: object,\r\n}\r\n\r\nconst RepositoryGrid = ({ data }: Props) => {\r\n  return (\r\n    <StyledGridItem>\r\n      <StyledNameField>Name: {get(data, 'name')}</StyledNameField>\r\n      <StyledNameField>Author: {get(data, 'owner.login')}</StyledNameField>\r\n      <StyledNameField>Stars: {get(data, 'stargazers_count')}</StyledNameField>\r\n      <StyledAnchor href={get(data, 'html_url')} target=\"_blank\">GitHub repository</StyledAnchor>\r\n    </StyledGridItem >\r\n  )\r\n}\r\n\r\nexport default RepositoryGrid;\r\n","D:\\projects\\tradeling-gh-search\\src\\components\\Common\\CommonComponents.ts",[],"D:\\projects\\tradeling-gh-search\\src\\interfaces\\index.ts",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":21},{"ruleId":"106","replacedBy":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","severity":1,"message":"117","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"118","line":14,"column":10,"nodeType":"112","messageId":"113","endLine":14,"endColumn":17},{"ruleId":"110","severity":1,"message":"119","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"114","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"120","line":2,"column":23,"nodeType":"112","messageId":"113","endLine":2,"endColumn":34},{"ruleId":"110","severity":1,"message":"121","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":27},{"ruleId":"110","severity":1,"message":"122","line":4,"column":29,"nodeType":"112","messageId":"113","endLine":4,"endColumn":46},{"ruleId":"110","severity":1,"message":"123","line":4,"column":48,"nodeType":"112","messageId":"113","endLine":4,"endColumn":63},{"ruleId":"110","severity":1,"message":"124","line":4,"column":65,"nodeType":"112","messageId":"113","endLine":4,"endColumn":89},{"ruleId":"110","severity":1,"message":"125","line":4,"column":91,"nodeType":"112","messageId":"113","endLine":4,"endColumn":115},{"ruleId":"110","severity":1,"message":"126","line":4,"column":117,"nodeType":"112","messageId":"113","endLine":4,"endColumn":139},{"ruleId":"110","severity":1,"message":"127","line":4,"column":141,"nodeType":"112","messageId":"113","endLine":4,"endColumn":155},{"ruleId":"128","severity":1,"message":"129","line":25,"column":6,"nodeType":"130","endLine":25,"endColumn":8,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"132","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"132","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'getLength' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.",["133"],["134"],"'FunctionComponent' is defined but never used.","'isEmpty' is defined but never used.","'React' is defined but never used.","'useDispatch' is defined but never used.","'fetchUsersRequest' is defined but never used.","'fetchUsersSuccess' is defined but never used.","'fetchUsersError' is defined but never used.","'fetchRepositoriesRequest' is defined but never used.","'fetchRepositoriesSuccess' is defined but never used.","'fetchRepositoriesError' is defined but never used.","'setSearchQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'criteria' and 'query'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'styled' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [criteria, query]",{"range":"138","text":"139"},[855,857],"[criteria, query]"]